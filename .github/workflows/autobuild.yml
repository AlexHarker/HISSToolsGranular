name: build-github
on: workflow_dispatch
jobs:
  deploy-win:
    if: false
    runs-on: windows-2019
    steps:
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Checkout max-sdk-base
        uses: actions/checkout@v3
        with:
          repository: 'Cycling74/max-sdk-base'
          path: "max-sdk-base"
      - name: Checkout main repo
        uses: actions/checkout@v3
        with:
          path: "hirt"
      - name: Checkout convolution reverb specific externals
        uses: actions/checkout@v3
        with:
            repository: 'AlexHarker/M4L_Convolution_Reverb_Externals'
            path: "m4l"
      - name: Build windows externals
        run: | 
             msbuild "m4l/M4L_Convolution_Reverb_Externals.sln" /p:configuration="Release" /p:platform=x64 /v:q /clp:ErrorsOnly /nologo /m
             msbuild "hirt/HISSTools_IR_Toolbox.sln" /p:configuration="Release" /p:platform=x64 /v:q /clp:ErrorsOnly /nologo /m
      - name: Upload windows builds
        uses: actions/upload-artifact@v3
        with:
          name: deploy-win-hirt
          path: "hirt/HISSTools_Packaging/HISSTools Impulse Response Toolbox (HIRT)/externals/HIRT_externals_WIN/"
      - name: Upload windows convolution reverb specific builds
        uses: actions/upload-artifact@v3
        with:
          name: deploy-win-m4l
          path: m4l/build-win
  deploy-mac:
    runs-on: macos-latest
    #needs: deploy-win
    steps:
      - name: Checkout iPlug2
        uses: actions/checkout@v3
        with:
          repository: 'iPlug2/iPlug2'
          path: "iPlug2"
      - name: Checkout VST3 SDK
        uses: actions/checkout@v3
        with:
          repository: steinbergmedia/vst3sdk
          submodules: recursive
          path: "iPlug2/Dependencies/IPlug/VST3_SDK"
      - name: Download iPlug2 Mac Dependencies
        shell: bash
        run: |
             cd iPlug2/Dependencies
             ./download-prebuilt-libs.sh
      - name: Checkout Main Repo
        uses: actions/checkout@v3
        with:
          path: "iPlug2/Projects/HISSTools_Granular"
      - name: Checkout HISSTools PluginLib
        uses: actions/checkout@v3
        with:
          repository: 'AlexHarker/HISSTools_PluginLib'
          path: "iPlug2/Projects/HISSTools_PluginLib"
      - name: Download windows builds
        if: false
        uses: actions/download-artifact@v3
        with:
          name: deploy-win-hirt
          path: "hirt/HISSTools_Packaging/HISSTools Impulse Response Toolbox (HIRT)/externals/HIRT_externals_WIN/"
      - name: Setup Keychain and Identities
        shell: bash
        env:  
          TEAM_ID: ${{ secrets.TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_SPECIFIC_PWD: ${{ secrets.APP_SPECIFIC_PWD }}
          CERT_PWD: ${{ secrets.CERT_PWD }}
          CERT_BASE64: ${{ secrets.CERT_BASE64}}
          CERTPATH: ${{ runner.temp }}/certificate.p12
          KEYCHAINPWD: temporarykeychainpassword
          KEYCHAINPATH: ${{ runner.temp }}/app-signing.keychain-db
         # create and setup a temporary keychain, then decode the certificate and setup creditials for codesigning and notarization
        run: |
             security create-keychain -p "$KEYCHAINPWD" "$KEYCHAINPATH"
             security list-keychain -d user -s "$KEYCHAINPATH"
             security set-keychain-settings "$KEYCHAINPATH"
             security unlock-keychain -p "$KEYCHAINPWD" "$KEYCHAINPATH"
             echo -n "$CERT_BASE64" | base64 --decode --output $CERTPATH
             security import "$CERTPATH" -P "$CERT_PWD" -A -t cert -f pkcs12 -k "$KEYCHAINPATH" -T /usr/bin/codesign
             security set-key-partition-list -S apple-tool:,apple:, -s -k "$KEYCHAINPATH" -D "$CERT_BASE64" -t private "$KEYCHAINPATH"
             xcrun notarytool store-credentials "HIRT-NOTARIZE" --apple-id $APPLE_ID --team-id $TEAM_ID --password $APP_SPECIFIC_PWD
      - name: Build Mac Plugins
        run: xcodebuild -project 'iPlug2/Projects/HISSTools_Granular/projects/HISSToolsGranular-macOS.xcodeproj' -scheme 'Finished Plugs' -destination 'platform=OS X,arch=x86_64' -configuration Deployment -quiet build CODE_SIGNING_ALLOWED=YES
  
    
